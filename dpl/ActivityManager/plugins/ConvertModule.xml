<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ConvertModule</name>
    </assembly>
    <members>
        <member name="T:ConvertModule.IPlug">
            <summary>
            Доступный из-вне интерфейс плагина
            </summary>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertIntToString(System.Int64,ConvertModule.TextCase,ConvertModule.Sex,System.Boolean,System.Boolean,System.String@)">
            <summary>
            Функция конвертации целого числа в текст
            </summary>
            <param name="number">Число</param>
            <param name="textCase">Падеж</param>
            <param name="sex">Пол</param>
            <param name="firstCapital">Ставить первую букву прописной</param>
            <param name="isOrdinal">Если true, то порядковое числительно, если false, то количественное</param>
            <param name="words">Возвращаемый текст</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertIntCellToString(ExtendedTypes.ReportRow,System.String,ConvertModule.TextCase,ConvertModule.Sex,System.Boolean,System.Boolean,ExtendedTypes.ReportRow@)">
            <summary>
            Действие конвертации ячейки с числом в строковое представление чисел
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="sex">Пол</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="isOrdinal">Если true, то порядковое числительно, если false, то количественное</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertIntColToString(ExtendedTypes.ReportTable,System.String,ConvertModule.TextCase,ConvertModule.Sex,System.Boolean,System.Boolean,ExtendedTypes.ReportTable@)">
            <summary>
            Действие конвертации всех значений колонки таблицы в строковое представление чисел
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="sex">Пол</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="isOrdinal">Если true, то порядковое числительно, если false, то количественное</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertDateTimeToString(System.DateTime,System.String,System.Boolean,System.String@)">
            <summary>
            Форматирование даты и времени в виде текста
            </summary>
            <param name="dateTime">Дата и время</param>
            <param name="format">
            Формат даты и времени. Можно задавать стандартный формат даты и времени, либо расширенный вариант:
            ddx - день месяца в виде текста
            MMx - месяц в виде текста
            yyx - год в формате двухзначного числа в виде текста
            yyyyx - год в формате четырехзначного числа в виде текста
            hhx - время от 1 до 12 в виде текста
            HHx - время от 0 до 23 в виде текста
            mmx - минуты в виде текста
            ssx - секунды в виде текста
            Буква "х" во всех расширенных форматах - первая буква падежа n,g,d,a,i,p
            </param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="words">Возвращаемый текст</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertDateTimeCellToString(ExtendedTypes.ReportRow,System.String,System.String,System.Boolean,ExtendedTypes.ReportRow@)">
            <summary>
            Действие конвертации ячейки с датой в форматированное представление даты
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="format">
            Формат даты и времени. Можно задавать стандартный формат даты и времени, либо расширенный вариант:
            ddx - день месяца в виде текста
            MMx - месяц в виде текста
            yyx - год в формате двухзначного числа в виде текста
            yyyyx - год в формате четырехзначного числа в виде текста
            hhx - время от 1 до 12 в виде текста
            HHx - время от 0 до 23 в виде текста
            mmx - минуты в виде текста
            ssx - секунды в виде текста
            Буква "х" во всех расширенных форматан - первая буква падежа n,g,d,a,i,p
            </param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertDateTimeColToString(ExtendedTypes.ReportTable,System.String,System.String,System.Boolean,ExtendedTypes.ReportTable@)">
            <summary>
            Действие конвертации всех значений колонки таблицы в форматированное представление даты
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="format">
            Формат даты и времени. Можно задавать стандартный формат даты и времени, либо расширенный вариант:
            ddx - день месяца в виде текста
            MMx - месяц в виде текста
            yyx - год в формате двухзначного числа в виде текста
            yyyyx - год в формате четырехзначного числа в виде текста
            hhx - время от 1 до 12 в виде текста
            HHx - время от 0 до 23 в виде текста
            mmx - минуты в виде текста
            ssx - секунды в виде текста
            Буква "х" во всех расширенных форматан - первая буква падежа n,g,d,a,i,p
            </param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertCurrencyToString(System.Decimal,ConvertModule.CurrencyType,System.String,System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            Действие конвертации суммы в строку
            </summary>
            <param name="currency">Сумма</param>
            <param name="currencyType">Тип валюты</param>
            <param name="format">Формат строки вывода суммы:
            ii - рубли (доллары, евро) в виде числа
            ff - копейки (центы) в виде числа
            iix - рубли (доллары, евро) в виде строки
            ffx - копейки (центы) в виде строки
            rx - слово "рубль" ("доллар", "евро")
            kx - словок "копейка" ("цент")
            Буква "х" во всех форматах - первая буква падежа n,g,d,a,i,p
            </param>
            <param name="thousandSeparator">Разделитель порядков</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="isOrdinal">Если true, то порядковое числительно, если false, то количественное</param>
            <param name="words">Возвращаемый текст</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertCurrencyCellToString(ExtendedTypes.ReportRow,System.String,ConvertModule.CurrencyType,System.String,System.String,System.Boolean,System.Boolean,ExtendedTypes.ReportRow@)">
            <summary>
            Действие конвертации значения ячейки с суммой в строковое представление суммы
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="currencyType">Тип валюты</param>
            <param name="format">Формат строки вывода суммы:
            ii - рубли (доллары, евро) в виде числа
            ff - копейки (центы) в виде числа
            iix - рубли (доллары, евро) в виде строки
            ffx - копейки (центы) в виде строки
            rx - слово "рубль" ("доллар", "евро")
            kx - словок "копейка" ("цент")
            nn - слово "минус ", если число отрицательное. Если число положительное, то пустая строка. Пробел после слова минус ставится автоматически.
            n - знак "-", если число отрицательное. Если число положительное, то знак не ставится. Пробел после знака "-" автоматически НЕ ставится.
            Буква "х" во всех форматах - первая буква падежа n,g,d,a,i,p
            </param>
            <param name="thousandSeparator">Разделитель порядков</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="isOrdinal">Если true, то порядковое числительно, если false, то количественное</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertCurrencyColToString(ExtendedTypes.ReportTable,System.String,ConvertModule.CurrencyType,System.String,System.String,System.Boolean,System.Boolean,ExtendedTypes.ReportTable@)">
            <summary>
            Действие конвертации всех значений колонки таблицы в строковое представление суммы
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="currencyType">Тип валюты</param>
            <param name="format">Формат строки вывода суммы:
            ii - рубли (доллары, евро) в виде числа
            ff - копейки (центы) в виде числа
            iix - рубли (доллары, евро) в виде строки
            ffx - копейки (центы) в виде строки
            rx - слово "рубль" ("доллар", "евро")
            kx - словок "копейка" ("цент")
            nn - слово "минус ", если число отрицательное. Если число положительное, то пустая строка. Пробел после слова минус ставится автоматически.
            n - знак "-", если число отрицательное. Если число положительное, то знак не ставится. Пробел после знака "-" автоматически НЕ ставится.
            Буква "х" во всех форматах - первая буква падежа n,g,d,a,i,p
            </param>
            <param name="thousandSeparator">Разделитель порядков</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="isOrdinal">Если true, то порядковое числительно, если false, то количественное</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertFloatToString(System.Decimal,ConvertModule.TextCase,System.Boolean,System.String@)">
            <summary>
            Функция конвертации вещественного числа в текст
            </summary>
            <param name="number">Число</param>
            <param name="textCase">Падеж</param>
            <param name="firstCapital">Ставить первую букву прописной</param>
            <param name="words">Возвращаемый текст</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertFloatCellToString(ExtendedTypes.ReportRow,System.String,ConvertModule.TextCase,System.Boolean,ExtendedTypes.ReportRow@)">
            <summary>
            Действие конвертации значения ячейки с вещественным числом в троку
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertFloatColToString(ExtendedTypes.ReportTable,System.String,ConvertModule.TextCase,System.Boolean,ExtendedTypes.ReportTable@)">
            <summary>
            Действие конвертации всех значений колонки таблицы в строковое представление вещественного числа
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertNameToCase(System.String,System.String,ConvertModule.TextCase,System.String@)">
            <summary>
            Действие перевода ФИО в указанный падеж
            </summary>
            <param name="nameIn">ФИО в именительном падеже</param>
            <param name="format">Формат ФИО:
            ss - полное представление фамилии
            s - первая буква фамилии
            nn - полное представление имени
            n - первая буква имени
            pp - полное представление отчества 
            p - первая буква отчества
            </param>
            <param name="textCase">Падеж</param>
            <param name="nameOut">Выходная строка с ФИО</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertNameCellToCase(ExtendedTypes.ReportRow,System.String,System.String,ConvertModule.TextCase,ExtendedTypes.ReportRow@)">
            <summary>
            Перевод ячейки с ФИО в указанный падеж
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="format">Формат ФИО:
            ss - полное представление фамилии
            s - первая буква фамилии
            nn - полное представление имени
            n - первая буква имени
            pp - полное представление отчества 
            p - первая буква отчества
            </param>
            <param name="textCase">Падеж</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertNameColToCase(ExtendedTypes.ReportTable,System.String,System.String,ConvertModule.TextCase,ExtendedTypes.ReportTable@)">
            <summary>
            Перевод всех значений колонки с ФИО в указанный падеж
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="format">Формат ФИО:
            ss - полное представление фамилии
            s - первая буква фамилии
            nn - полное представление имени
            n - первая буква имени
            pp - полное представление отчества 
            p - первая буква отчества
            </param>
            <param name="textCase">Падеж</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertPostToCase(System.String,ConvertModule.TextCase,System.String@)">
            <summary>
            Действие перевода должности в указанный падеж 
            </summary>
            <param name="postIn">Должность в именительном падеже</param>
            <param name="textCase">Падеж</param>
            <param name="postOut">Выходная строка с должностью</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertPostCellToCase(ExtendedTypes.ReportRow,System.String,ConvertModule.TextCase,ExtendedTypes.ReportRow@)">
            <summary>
            Действие перевода ячейки с должностью в указанный падеж 
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertPostColToCase(ExtendedTypes.ReportTable,System.String,ConvertModule.TextCase,ExtendedTypes.ReportTable@)">
            <summary>
            Действие перевода колонки с должностью в указанный падеж 
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertOfficeToCase(System.String,ConvertModule.TextCase,System.String@)">
            <summary>
            Действие перевода названия подразделения или предприятия в указанный падеж 
            </summary>
            <param name="officeIn">Название подразделения или предприятия в именительном падеже</param>
            <param name="textCase">Падеж</param>
            <param name="officeOut">Выходная строка с названием подразделения или предприятия</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertOfficeCellToCase(ExtendedTypes.ReportRow,System.String,ConvertModule.TextCase,ExtendedTypes.ReportRow@)">
            <summary>
            Действие перевода ячейки с названием подразделения или предприятия в указанный падеж 
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.IPlug.ConvertOfficeColToCase(ExtendedTypes.ReportTable,System.String,ConvertModule.TextCase,ExtendedTypes.ReportTable@)">
            <summary>
            Действие перевода колонки с названием подразделения или предприятия в указанный падеж 
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.IPlug.RowConcat(ExtendedTypes.ReportRow,System.String,System.String@)">
            <summary>
            Действие объединения всех ячеек строки данных в одну строку
            </summary>
            <param name="inRow">Входная строка отчета</param>
            <param name="separator">Разделитель ячеек</param>
            <param name="outValue">Результирующая строка</param>
        </member>
        <member name="M:ConvertModule.IPlug.ColumnConcat(ExtendedTypes.ReportTable,System.String,System.String,System.String@)">
            <summary>
            Действие объединения всех значений колонки в одну строку
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки</param>
            <param name="separator">Разделитель объединяемых значений</param>
            <param name="outValue">Результирующая строка</param>
        </member>
        <member name="M:ConvertModule.IPlug.TableConcat(ExtendedTypes.ReportTable,System.String,System.String,System.String@)">
            <summary>
            Действие объединения значений всех ячеек таблицы в одну строку
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="rowSeparator">Разделитель строк</param>
            <param name="cellSeparator">Разделитель ячеек</param>
            <param name="outValue">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.IPlug.GetRow(ExtendedTypes.ReportTable,System.Int32,ExtendedTypes.ReportRow@)">
            <summary>
            Получить строку таблицы по указанному номеру
            </summary>
            <param name="table">Таблица, из которой выбирается строка</param>
            <param name="rowNumber">Номер строки начиная с 0</param>
            <param name="row">Результирующая строка</param>
        </member>
        <member name="M:ConvertModule.IPlug.GetCell(ExtendedTypes.ReportTable,System.Int32,System.String,System.Object@)">
            <summary>
            Получить значение ячейки таблицы по указанному номеру
            </summary>
            <param name="table">Таблица, из которой выбирается значение ячейки</param>
            <param name="rowNumber">Номер строки начиная с 0</param>
            <param name="columnName">Имя столбца</param>
            <param name="value">Результирующее значение</param>
        </member>
        <member name="T:ConvertModule.ConvertPlug">
            <summary>
            Плагин, реализующий интерфейс IPlug
            </summary>
        </member>
        <member name="M:ConvertModule.ConvertPlug.#ctor">
            <summary>
            В конструкторе происходит подгрузка словаря для Padeg.dll
            </summary>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertIntToString(System.Int64,ConvertModule.TextCase,ConvertModule.Sex,System.Boolean,System.Boolean,System.String@)">
            <summary>
            Функция конвертации целого числа в текст
            </summary>
            <param name="number">Число</param>
            <param name="textCase">Падеж</param>
            <param name="sex">Пол</param>
            <param name="firstCapital">Ставить первую букву прописной</param>
            <param name="isOrdinal">Если true, то порядковое числительно, если false, то количественное</param>
            <param name="words">Возвращаемый текст</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertFloatToString(System.Decimal,ConvertModule.TextCase,System.Boolean,System.String@)">
            <summary>
            Функция конвертации вещественного числа в текст
            </summary>
            <param name="number">Число</param>
            <param name="textCase">Падеж</param>
            <param name="firstCapital">Ставить первую букву прописной</param>
            <param name="words">Возвращаемый текст</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertDateTimeToString(System.DateTime,System.String,System.Boolean,System.String@)">
            <summary>
            Форматирование даты и времени в виде текста
            </summary>
            <param name="dateTime">Дата и время</param>
            <param name="format">
            Формат даты и времени. Можно задавать стандартный формат даты и времени, либо расширенный вариант:
            ddx - день месяца в виде текста
            MMx - месяц в виде текста
            yyx - год в формате двухзначного числа в виде текста
            yyyyx - год в формате четырехзначного числа в виде текста
            hhx - время от 1 до 12 в виде текста
            HHx - время от 0 до 23 в виде текста
            mmx - минуты в виде текста
            ssx - секунды в виде текста
            Буква "х" во всех расширенных форматах - первая буква падежа n,g,d,a,i,p
            </param>
            <param name="firstCapital">Ставить первую букву прописной</param>
            <param name="words">Возвращаемый текст</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertCurrencyToString(System.Decimal,ConvertModule.CurrencyType,System.String,System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            Действие конвертации суммы в строку
            </summary>
            <param name="currency">Сумма</param>
            <param name="currencyType">Тип валюты</param>
            <param name="format">Формат строки вывода суммы:
            ii - рубли (доллары, евро) в виде числа
            ff - копейки (центы) в виде числа
            iix - рубли (доллары, евро) в виде строки
            ffx - копейки (центы) в виде строки
            rx - слово "рубль" ("доллар", "евро")
            kx - словок "копейка" ("цент")
            nn - слово "минус ", если число отрицательное. Если число положительное, то пустая строка. Пробел после слова минус ставится автоматически.
            n - знак "-", если число отрицательное. Если число положительное, то знак не ставится. Пробел после знака "-" автоматически НЕ ставится.
            Буква "х" во всех форматах - первая буква падежа n,g,d,a,i,p
            </param>
            <param name="thousandSeparator">Разделитель порядков</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="isOrdinal">Если true, то порядковое числительно, если false, то количественное</param>
            <param name="words">Возвращаемый текст</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertIntCellToString(ExtendedTypes.ReportRow,System.String,ConvertModule.TextCase,ConvertModule.Sex,System.Boolean,System.Boolean,ExtendedTypes.ReportRow@)">
            <summary>
            Действие конвертации ячейки с числом в строковое представление чисел
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="sex">Пол</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="isOrdinal">Если true, то порядковое числительно, если false, то количественное</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertIntColToString(ExtendedTypes.ReportTable,System.String,ConvertModule.TextCase,ConvertModule.Sex,System.Boolean,System.Boolean,ExtendedTypes.ReportTable@)">
            <summary>
            Действие конвертации всех значений колонки таблицы в строковое представление чисел
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки</param>
            <param name="textCase">Падеж</param>
            <param name="sex">Пол</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="isOrdinal">Если true, то порядковое числительно, если false, то количественное</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertDateTimeCellToString(ExtendedTypes.ReportRow,System.String,System.String,System.Boolean,ExtendedTypes.ReportRow@)">
            <summary>
            Действие конвертации ячейки с датой в форматированное представление даты
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="format">
            Формат даты и времени. Можно задавать стандартный формат даты и времени, либо расширенный вариант:
            ddx - день месяца в виде текста
            MMx - месяц в виде текста
            yyx - год в формате двухзначного числа в виде текста
            yyyyx - год в формате четырехзначного числа в виде текста
            hhx - время от 1 до 12 в виде текста
            HHx - время от 0 до 23 в виде текста
            mmx - минуты в виде текста
            ssx - секунды в виде текста
            Буква "х" во всех расширенных форматан - первая буква падежа n,g,d,a,i,p
            </param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertDateTimeColToString(ExtendedTypes.ReportTable,System.String,System.String,System.Boolean,ExtendedTypes.ReportTable@)">
            <summary>
            Действие конвертации всех значений колонки таблицы в форматированное представление даты
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки</param>
            <param name="format">
            Формат даты и времени. Можно задавать стандартный формат даты и времени, либо расширенный вариант:
            ddx - день месяца в виде текста
            MMx - месяц в виде текста
            yyx - год в формате двухзначного числа в виде текста
            yyyyx - год в формате четырехзначного числа в виде текста
            hhx - время от 1 до 12 в виде текста
            HHx - время от 0 до 23 в виде текста
            mmx - минуты в виде текста
            ssx - секунды в виде текста
            Буква "х" во всех расширенных форматан - первая буква падежа n,g,d,a,i,p
            </param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertCurrencyCellToString(ExtendedTypes.ReportRow,System.String,ConvertModule.CurrencyType,System.String,System.String,System.Boolean,System.Boolean,ExtendedTypes.ReportRow@)">
            <summary>
            Действие конвертации значения ячейки с суммой в строковое представление суммы
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="currencyType">Тип валюты</param>
            <param name="format">Формат строки вывода суммы:
            ii - рубли (доллары, евро) в виде числа
            ff - копейки (центы) в виде числа
            iix - рубли (доллары, евро) в виде строки
            ffx - копейки (центы) в виде строки
            rx - слово "рубль" ("доллар", "евро")
            kx - словок "копейка" ("цент")
            nn - слово "минус ", если число отрицательное. Если число положительное, то пустая строка. Пробел после слова минус ставится автоматически.
            n - знак "-", если число отрицательное. Если число положительное, то знак не ставится. Пробел после знака "-" автоматически НЕ ставится.
            Буква "х" во всех форматах - первая буква падежа n,g,d,a,i,p
            </param>
            <param name="thousandSeparator">Разделитель порядков</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="isOrdinal">Если true, то порядковое числительно, если false, то количественное</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertCurrencyColToString(ExtendedTypes.ReportTable,System.String,ConvertModule.CurrencyType,System.String,System.String,System.Boolean,System.Boolean,ExtendedTypes.ReportTable@)">
            <summary>
            Действие конвертации всех значений колонки таблицы в строковое представление суммы
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки</param>
            <param name="currencyType">Тип валюты</param>
            <param name="format">Формат строки вывода суммы:
            ii - рубли (доллары, евро) в виде числа
            ff - копейки (центы) в виде числа
            iix - рубли (доллары, евро) в виде строки
            ffx - копейки (центы) в виде строки
            rx - слово "рубль" ("доллар", "евро")
            kx - словок "копейка" ("цент")
            nn - слово "минус ", если число отрицательное. Если число положительное, то пустая строка. Пробел после слова минус ставится автоматически.
            n - знак "-", если число отрицательное. Если число положительное, то знак не ставится. Пробел после знака "-" автоматически НЕ ставится.
            Буква "х" во всех форматах - первая буква падежа n,g,d,a,i,p
            </param>
            <param name="thousandSeparator">Разделитель порядков</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="isOrdinal">Если true, то порядковое числительно, если false, то количественное</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertFloatCellToString(ExtendedTypes.ReportRow,System.String,ConvertModule.TextCase,System.Boolean,ExtendedTypes.ReportRow@)">
            <summary>
            Действие конвертации значения ячейки с вещественным числом в троку
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertFloatColToString(ExtendedTypes.ReportTable,System.String,ConvertModule.TextCase,System.Boolean,ExtendedTypes.ReportTable@)">
            <summary>
            Действие конвертации всех значений колонки таблицы в строковое представление вещественного числа
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки</param>
            <param name="textCase">Падеж</param>
            <param name="firstCapital">Ставить первую букву прописной или нет</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertNameToCase(System.String,System.String,ConvertModule.TextCase,System.String@)">
            <summary>
            Перевод ФИО в указанный падеж
            </summary>
            <param name="nameIn">ФИО в именительном падеже</param>
            <param name="format">Формат ФИО:
            ss - полное представление фамилии
            s - первая буква фамилии
            nn - полное представление имени
            n - первая буква имени
            pp - полное представление отчества 
            p - первая буква отчества
            </param>
            <param name="textCase">Падеж</param>
            <param name="nameOut">Выходная строка с ФИО</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertNameCellToCase(ExtendedTypes.ReportRow,System.String,System.String,ConvertModule.TextCase,ExtendedTypes.ReportRow@)">
            <summary>
            Перевод ячейки с ФИО в указанный падеж
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="format">Формат ФИО:
            ss - полное представление фамилии
            s - первая буква фамилии
            nn - полное представление имени
            n - первая буква имени
            pp - полное представление отчества 
            p - первая буква отчества
            </param>
            <param name="textCase">Падеж</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertNameColToCase(ExtendedTypes.ReportTable,System.String,System.String,ConvertModule.TextCase,ExtendedTypes.ReportTable@)">
            <summary>
            Перевод всех значений колонки с ФИО в указанный падеж
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки</param>
            <param name="format">Формат ФИО:
            ss - полное представление фамилии
            s - первая буква фамилии
            nn - полное представление имени
            n - первая буква имени
            pp - полное представление отчества 
            p - первая буква отчества
            </param>
            <param name="textCase">Падеж</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertPostToCase(System.String,ConvertModule.TextCase,System.String@)">
            <summary>
            Действие перевода должности в указанный падеж 
            </summary>
            <param name="postIn">Должность в именительном падеже</param>
            <param name="textCase">Падеж</param>
            <param name="postOut">Выходная строка с должностью</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertPostCellToCase(ExtendedTypes.ReportRow,System.String,ConvertModule.TextCase,ExtendedTypes.ReportRow@)">
            <summary>
            Действие перевода ячейки с должностью в указанный падеж 
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertPostColToCase(ExtendedTypes.ReportTable,System.String,ConvertModule.TextCase,ExtendedTypes.ReportTable@)">
            <summary>
            Действие перевода колонки с должностью в указанный падеж 
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertOfficeToCase(System.String,ConvertModule.TextCase,System.String@)">
            <summary>
            Действие перевода названия подразделения или предприятия в указанный падеж 
            </summary>
            <param name="officeIn">Название подразделения или предприятия в именительном падеже</param>
            <param name="textCase">Падеж</param>
            <param name="officeOut">Выходная строка с названием подразделения или предприятия</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertOfficeCellToCase(ExtendedTypes.ReportRow,System.String,ConvertModule.TextCase,ExtendedTypes.ReportRow@)">
            <summary>
            Действие перевода ячейки с названием подразделения или предприятия в указанный падеж 
            </summary>
            <param name="inRow">Входная строка</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="outRow">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ConvertOfficeColToCase(ExtendedTypes.ReportTable,System.String,ConvertModule.TextCase,ExtendedTypes.ReportTable@)">
            <summary>
            Действие перевода колонки с названием подразделения или предприятия в указанный падеж 
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки (или перечень колонок через запятую)</param>
            <param name="textCase">Падеж</param>
            <param name="outTable">Выходная таблица</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.RowConcat(ExtendedTypes.ReportRow,System.String,System.String@)">
            <summary>
            Действие объединения всех ячеек строки данных в одну строку
            </summary>
            <param name="inRow">Входная строка отчета</param>
            <param name="separator">Разделитель ячеек</param>
            <param name="outValue">Результирующая строка</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.ColumnConcat(ExtendedTypes.ReportTable,System.String,System.String,System.String@)">
            <summary>
            Действие объединения всех значений колонки в одну строку
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="column">Имя колонки</param>
            <param name="separator">Разделитель объединяемых значений</param>
            <param name="outValue">Результирующая строка</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.TableConcat(ExtendedTypes.ReportTable,System.String,System.String,System.String@)">
            <summary>
            Действие объединения значений всех ячеек таблицы в одну строку
            </summary>
            <param name="inTable">Входная таблица</param>
            <param name="rowSeparator">Разделитель строк</param>
            <param name="cellSeparator">Разделитель ячеек</param>
            <param name="outValue">Выходная строка</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.GetRow(ExtendedTypes.ReportTable,System.Int32,ExtendedTypes.ReportRow@)">
            <summary>
            Получить строку таблицы по указанному номеру
            </summary>
            <param name="table">Таблица, из которой выбирается строка</param>
            <param name="rowNumber">Номер строки начиная с 0</param>
            <param name="row">Результирующая строка</param>
        </member>
        <member name="M:ConvertModule.ConvertPlug.GetCell(ExtendedTypes.ReportTable,System.Int32,System.String,System.Object@)">
            <summary>
            Получить значение ячейки таблицы по указанному номеру
            </summary>
            <param name="table">Таблица, из которой выбирается значение ячейки</param>
            <param name="rowNumber">Номер строки начиная с 0</param>
            <param name="columnName">Имя столбца</param>
            <param name="value">Результирующее значение</param>
        </member>
        <member name="T:ConvertModule.ConvertException">
            <summary>
            Класс исключения модуля ConvertPlugin
            </summary>
        </member>
        <member name="M:ConvertModule.ConvertException.#ctor">
            <summary>
            Конструктор класса исключения ConvertException
            </summary>
        </member>
        <member name="M:ConvertModule.ConvertException.#ctor(System.String)">
            <summary>
            Конструктор класса исключения ConvertException
            </summary>
            <param name="message">Сообщение об ошибке</param>
        </member>
        <member name="M:ConvertModule.ConvertException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор класса исключения ConvertException
            </summary>
            <param name="message">Сообщение об ошибке</param>
            <param name="innerException">Вложенное исключение</param>
        </member>
        <member name="M:ConvertModule.ConvertException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор класса исключения ConvertException
            </summary>
            <param name="info">Информация сериализации</param>
            <param name="context">Контекст потока</param>
        </member>
        <member name="T:ConvertModule.TextCase">
            <summary>
            Падеж
            </summary>
        </member>
        <member name="F:ConvertModule.TextCase.Nominative">
            <summary>
            Кто? Что?
            </summary>
        </member>
        <member name="F:ConvertModule.TextCase.Genitive">
            <summary>
            Кого? Чего?
            </summary>
        </member>
        <member name="F:ConvertModule.TextCase.Dative">
            <summary>
            Кому? Чему?
            </summary>
        </member>
        <member name="F:ConvertModule.TextCase.Accusative">
            <summary>
            Кого? Что?
            </summary>
        </member>
        <member name="F:ConvertModule.TextCase.Instrumental">
            <summary>
            Кем? Чем?
            </summary>
        </member>
        <member name="F:ConvertModule.TextCase.Prepositional">
            <summary>
            О ком? О чём?
            </summary>
        </member>
        <member name="T:ConvertModule.Sex">
            <summary>
            Пол
            </summary>
        </member>
        <member name="F:ConvertModule.Sex.Male">
            <summary>
            Мужской
            </summary>
        </member>
        <member name="F:ConvertModule.Sex.Female">
            <summary>
            Женский
            </summary>
        </member>
        <member name="F:ConvertModule.Sex.Neuter">
            <summary>
            Средний
            </summary>
        </member>
        <member name="T:ConvertModule.CurrencyType">
            <summary>
            Тип валюты
            </summary>
        </member>
        <member name="F:ConvertModule.CurrencyType.Ruble">
            <summary>
            Рубли
            </summary>
        </member>
        <member name="F:ConvertModule.CurrencyType.Dollar">
            <summary>
            Доллары
            </summary>
        </member>
        <member name="F:ConvertModule.CurrencyType.Euro">
            <summary>
            Евро
            </summary>
        </member>
        <member name="T:ConvertModule.Converter">
            <summary>
            Базовый класс конвертации
            </summary>
        </member>
        <member name="M:ConvertModule.Converter.#ctor(ConvertModule.TextCase,ConvertModule.Sex)">
            <summary>
            Конструктор класса конвертации
            </summary>
            <param name="textCase">Падеж по умолчанию, в который мы планируем конвертировать</param>
            <param name="sex">Пол по умолчанию, в который мы планируем конвертировать</param>
        </member>
        <member name="M:ConvertModule.Converter.NumberToText(System.Int64,System.Boolean)">
            <summary>
            Метод конвертации числа в текст
            </summary>
            <param name="number">Число</param>
            <param name="isOrdinal">Если true - порядковое числительное, если false - количественное числительное</param>
            <returns>Строковое представление числа</returns>
        </member>
        <member name="M:ConvertModule.Converter.DateTimeToText(System.DateTime,System.String)">
            <summary>
            Действие конвертации даты в текст
            </summary>
            <param name="dateTime">Дата</param>
            <param name="format">
            Формат даты и времени. Можно задавать стандартный формат даты и времени, либо расширенный вариант:
            ddx - день месяца в виде текста
            MMx - месяц в виде текста
            yyx - год в формате двухзначного числа в виде текста
            yyyyx - год в формате четырехзначного числа в виде текста
            hhx - время от 1 до 12 в виде текста
            HHx - время от 0 до 23 в виде текста
            mmx - минуты в виде текста
            ssx - секунды в виде текста
            Буква "х" во всех расширенных форматах - первая буква падежа n,g,d,a,i,p
            </param>
            <returns>Строковое представление даты</returns>
        </member>
        <member name="M:ConvertModule.Converter.CurrencyToString(System.Decimal,ConvertModule.CurrencyType,System.String,System.String,System.Boolean)">
            <summary>
            Действие конвертации суммы в строку
            </summary>
            <param name="currency">Сумма</param>
            <param name="currencyType">Тип валюты</param>
            <param name="format">
            Формат строки вывода суммы:
            ii - рубли (доллары, евро) в виде числа
            ff - копейки (центы) в виде числа
            iix - рубли (доллары, евро) в виде строки
            ffx - копейки (центы) в виде строки
            rx - слово "рубль" ("доллар", "евро")
            kx - словок "копейка" ("цент")
            nn - слово "минус ", если число отрицательное. Если число положительное, то пустая строка. Пробел после слова минус ставится автоматически.
            n - знак "-", если число отрицательное. Если число положительное, то знак не ставится. Пробел после знака "-" автоматически НЕ ставится.
            Буква "х" во всех форматах - первая буква падежа n,g,d,a,i,p
            </param>
            <param name="thousandSeparator">Разделитель порядков</param>
            <param name="isOrdinal">Если true - порядковое числительное (первый рубль), если false - количественное числительное (один рубль)</param>
            <returns>Возвращает строковое представление суммы</returns>
        </member>
        <member name="M:ConvertModule.Converter.FloatToString(System.Decimal)">
            <summary>
            Действие конвертации вещественного числа в строку
            </summary>
            <param name="number">Вещественное число</param>
            <returns>Результат</returns>
        </member>
        <member name="T:ConvertModule.MaleClass">
            <summary>
            Мужской пол
            </summary>
        </member>
        <member name="T:ConvertModule.SexClass">
            <summary>
            Класс пола
            </summary>
        </member>
        <member name="M:ConvertModule.SexClass.Translate(System.String)">
            <summary>
            Абстрактный метод-переводчик в нужный пол из мужского
            </summary>
            <param name="text">Текст, который необходимо перевести</param>
            <returns>Результат перевода</returns>
        </member>
        <member name="M:ConvertModule.MaleClass.Translate(System.String)">
            <summary>
            Метод-заглушка: переводит из мужского пола в мужской, по факту возвращает строку как она есть
            </summary>
            <param name="text">Текст, который необходимо перевести</param>
            <returns>Результат перевода</returns>
        </member>
        <member name="T:ConvertModule.FemaleClass">
            <summary>
            Женский пол
            </summary>
        </member>
        <member name="M:ConvertModule.FemaleClass.Translate(System.String)">
            <summary>
            Метод-переводчик в женский пол из мужского
            </summary>
            <param name="text">Текст, который необходимо перевести</param>
            <returns>Результат перевода</returns>
        </member>
        <member name="T:ConvertModule.NeuterClass">
            <summary>
            Средний пол
            </summary>
        </member>
        <member name="M:ConvertModule.NeuterClass.Translate(System.String)">
            <summary>
            Метод-переводчик в средний пол из мужского
            </summary>
            <param name="text">Текст, который необходимо перевести</param>
            <returns>Результат перевода</returns>
        </member>
        <member name="T:ConvertModule.NominativeCaseClass">
            <summary>
            Именительный падеж
            </summary>
        </member>
        <member name="T:ConvertModule.TextCaseClass">
            <summary>
            Класс падежа
            </summary>
        </member>
        <member name="M:ConvertModule.TextCaseClass.Translate(System.String)">
            <summary>
            Абстрактный метод-переводчик в необходимый падеж из именительного
            </summary>
            <param name="text">Текст, который необходимо перевести</param>
            <returns>Результат перевода</returns>
        </member>
        <member name="M:ConvertModule.NominativeCaseClass.Translate(System.String)">
            <summary>
            Метод-переводчик в именительный падеж из именительного
            </summary>
            <param name="text">Текст, который необходимо перевести</param>
            <returns>Результат перевода</returns>
        </member>
        <member name="T:ConvertModule.GenitiveCaseClass">
            <summary>
            Родительный падеж
            </summary>
        </member>
        <member name="M:ConvertModule.GenitiveCaseClass.Translate(System.String)">
            <summary>
            Метод-переводчик в родительный падеж из именительного
            </summary>
            <param name="text">Текст, который необходимо перевести</param>
            <returns>Результат перевода</returns>
        </member>
        <member name="T:ConvertModule.DativeCaseClass">
            <summary>
            Дательный падеж
            </summary>
        </member>
        <member name="M:ConvertModule.DativeCaseClass.Translate(System.String)">
            <summary>
            Метод-переводчик в дательный падеж из именительного
            </summary>
            <param name="text">Текст, который необходимо перевести</param>
            <returns>Результат перевода</returns>
        </member>
        <member name="T:ConvertModule.AccusativeCaseClass">
            <summary>
            Винительный падеж
            </summary>
        </member>
        <member name="M:ConvertModule.AccusativeCaseClass.Translate(System.String)">
            <summary>
            Метод-переводчик в винительный падеж из именительного
            </summary>
            <param name="text">Текст, который необходимо перевести</param>
            <returns>Результат перевода</returns>
        </member>
        <member name="T:ConvertModule.InstrumentalCaseClass">
            <summary>
            Творительный падеж
            </summary>
        </member>
        <member name="M:ConvertModule.InstrumentalCaseClass.Translate(System.String)">
            <summary>
            Метод-переводчик в творительный падеж из именительного
            </summary>
            <param name="text">Текст, который необходимо перевести</param>
            <returns>Результат перевода</returns>
        </member>
        <member name="T:ConvertModule.PrepositionalCaseClass">
            <summary>
            Предложный падеж
            </summary>
        </member>
        <member name="M:ConvertModule.PrepositionalCaseClass.Translate(System.String)">
            <summary>
            Метод-переводчик в предложный падеж из именительного
            </summary>
            <param name="text">Текст, который необходимо перевести</param>
            <returns>Результат перевода</returns>
        </member>
    </members>
</doc>
