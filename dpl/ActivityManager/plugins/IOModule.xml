<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IOModule</name>
    </assembly>
    <members>
        <member name="T:IOModule.IPlug">
            <summary>
            Доступный из-вне интерфейс плагина
            </summary>
        </member>
        <member name="M:IOModule.IPlug.IOOpenFile(System.String,System.String)">
            <summary>
            Метод для запуска на исполнение программ и открытия файлов документов
            </summary>
            <param name="fileName">Путь до программы или документа</param>
            <param name="arguments">Аргументы командной строки</param>
        </member>
        <member name="M:IOModule.IPlug.IODebugMessage(System.String)">
            <summary>
            Вывод отладочного сообщения
            </summary>
            <param name="message">Текст сообщения</param>
        </member>
        <member name="M:IOModule.IPlug.IOIfCondititonToStep(System.Boolean,System.Int32)">
            <summary>
            Условный переход на указанный шаг
            </summary>
            <param name="condition">Если true - то переходить, если false - пропустить</param>
            <param name="step">Шаг, на который необходимо перейти</param>
        </member>
        <member name="M:IOModule.IPlug.IOIfCondititonToLabel(System.Boolean,System.String)">
            <summary>
            Условный переход на указанную метку
            </summary>
            <param name="condition">Если true - то переходить, если false - пропустить</param>
            <param name="label">Текстовая метка, на которую необходимо произвести переход</param>
        </member>
        <member name="M:IOModule.IPlug.IOIfCondititonExit(System.Boolean)">
            <summary>
            Условный переход на конец программы
            </summary>
            <param name="condition">Если true - то переходить, если false - пропустить</param>
        </member>
        <member name="M:IOModule.IPlug.IOConsole(System.String)">
            <summary>
            Вывод в консоль
            </summary>
            <param name="text">Текст, который необходимо выводить в консоль</param>
        </member>
        <member name="T:IOModule.IOPlug">
            <summary>
            Класс, реализующий интерфейс IPlug
            </summary>
        </member>
        <member name="M:IOModule.IOPlug.IOOpenFile(System.String,System.String)">
            <summary>
            Метод для запуска на исполнение программ и открытия файлов документов
            </summary>
            <param name="fileName">Путь до программы или документа</param>
            <param name="arguments">Аргументы командной строки</param>
        </member>
        <member name="M:IOModule.IOPlug.IODebugMessage(System.String)">
            <summary>
            Вывод отладочного сообщения
            </summary>
            <param name="message">Текст сообщения</param>
        </member>
        <member name="M:IOModule.IOPlug.IOIfCondititonToStep(System.Boolean,System.Int32)">
            <summary>
            Условный переход на указанный шаг
            </summary>
            <param name="condition">Если true - то переходить, если false - пропустить</param>
            <param name="step">Шаг, на который необходимо перейти</param>
        </member>
        <member name="M:IOModule.IOPlug.IOIfCondititonToLabel(System.Boolean,System.String)">
            <summary>
            Условный переход на указанную метку
            </summary>
            <param name="condition">Если true - то переходить, если false - пропустить</param>
            <param name="label">Текстовая метка, на которую необходимо произвести переход</param>
        </member>
        <member name="M:IOModule.IOPlug.IOIfCondititonExit(System.Boolean)">
            <summary>
            Условный переход на конец программы
            </summary>
            <param name="condition">Если true - то переходить, если false - пропустить</param>
        </member>
        <member name="M:IOModule.IOPlug.IOConsole(System.String)">
            <summary>
            Вывод в консоль
            </summary>
            <param name="text">Текст, который необходимо выводить в консоль</param>
        </member>
        <member name="T:IOModule.IOException">
            <summary>
            Класс исключения модуля IOPlug
            </summary>
        </member>
        <member name="M:IOModule.IOException.#ctor">
            <summary>
            Конструктор класса исключения IOException
            </summary>
        </member>
        <member name="M:IOModule.IOException.#ctor(System.String)">
            <summary>
            Конструктор класса исключения IOException
            </summary>
            <param name="message">Сообщение об ошибке</param>
        </member>
        <member name="M:IOModule.IOException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор класса исключения IOException
            </summary>
            <param name="message">Сообщение об ошибке</param>
            <param name="innerException">Вложенное исключение</param>
        </member>
        <member name="M:IOModule.IOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор класса исключения IOException
            </summary>
            <param name="info">Информация сериализации</param>
            <param name="context">Контекст потока</param>
        </member>
        <member name="T:IOModule.IfConditionException">
            <summary>
            Класс исключения - прерывание и смена контекста выполнения
            </summary>
        </member>
        <member name="M:IOModule.IfConditionException.#ctor">
            <summary>
            Конструктор класса исключения IOException
            </summary>
        </member>
        <member name="M:IOModule.IfConditionException.#ctor(System.String)">
            <summary>
            Конструктор класса исключения IOException
            </summary>
            <param name="message">Сообщение об ошибке</param>
        </member>
        <member name="M:IOModule.IfConditionException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор класса исключения IOException
            </summary>
            <param name="message">Сообщение об ошибке</param>
            <param name="innerException">Вложенное исключение</param>
        </member>
        <member name="M:IOModule.IfConditionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор класса исключения IOException
            </summary>
            <param name="info">Информация сериализации</param>
            <param name="context">Контекст потока</param>
        </member>
    </members>
</doc>
