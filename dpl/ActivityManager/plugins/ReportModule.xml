<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ReportModule</name>
    </assembly>
    <members>
        <member name="T:ReportModule.CalcEditor">
            <summary>
            Редактор отчетов OpenOffice Calc
            </summary>
        </member>
        <member name="T:ReportModule.ReportEditor">
            <summary>
            Базовый класс редактора отчета
            </summary>
        </member>
        <member name="M:ReportModule.ReportEditor.ContractorsConvert(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.ObjectModel.Collection{ReportModule.ReportValue})">
            <summary>
            Метод конвертации xml-замыкателей
            </summary>
            <param name="xmlContractors">Ассоциативный словарь унифицированных и неунифицированных замыкателей</param>
            <param name="values">Список переменных отчета</param>
            <returns>Возвращает список переменных отчета с неунифицированными замыкателями</returns>
        </member>
        <member name="M:ReportModule.ReportEditor.ReportEditingContentFile(System.String,System.Collections.ObjectModel.Collection{ReportModule.ReportValue})">
            <summary>
            Метод, заполняющий файл отчета контентом
            </summary>
            <param name="reportContentFile">Основной файл отчета</param>
            <param name="values">Переменные отчета</param>
        </member>
        <member name="M:ReportModule.ReportEditor.WriteString(ReportModule.StringReportValue,System.Xml.Linq.XDocument)">
            <summary>
            Метод, заменяющий строковый шаблон отчета
            </summary>
            <param name="reportValue">Строковая переменная отчета</param>
            <param name="document">Отчет</param>
        </member>
        <member name="M:ReportModule.ReportEditor.WritePatternText(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Метод, заменяющий шаблонную строку на значение в контенте указанного элемента
            </summary>
            <param name="element">Элемент</param>
            <param name="pattern">Шаблон</param>
            <param name="value">Значение</param>
        </member>
        <member name="M:ReportModule.ReportEditor.WritePatternAttributes(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Метод, заменяющий шаблонную строку на значения в атрибутах указанного элемента
            </summary>
            <param name="element"></param>
            <param name="pattern"></param>
            <param name="value"></param>
        </member>
        <member name="M:ReportModule.ReportEditor.WriteTable(ReportModule.TableReportValue,System.Xml.Linq.XDocument)">
            <summary>
            Метод, заменяющий табличный шаблон отчета
            </summary>
            <param name="reportValue">Табличная переменная отчета</param>
            <param name="document">Отчет</param>
        </member>
        <member name="M:ReportModule.ReportEditor.XmlContractorsConvert(System.Collections.ObjectModel.Collection{ReportModule.ReportValue})">
            <summary>
            Класс конвертации xml-замыкателя
            </summary>
            <param name="values">Список переменных, в которых надо найти унифицированные замыкатели и заменить на зависимые от типа отчета</param>
            <returns>Возвращает список переменных отчета с зависимыми от типа отчета xml-замыкателями</returns>
        </member>
        <member name="M:ReportModule.ReportEditor.ReportEditing(System.String,System.Collections.ObjectModel.Collection{ReportModule.ReportValue})">
            <summary>
            Метод, производящий замену всех шаблонов отчета на значения переменных отчета
            </summary>
            <param name="reportUnzipPath">Путь до файла отчета</param>
            <param name="values">Список переменных</param>
        </member>
        <member name="M:ReportModule.ReportEditor.SpecialTagEditing(System.String)">
            <summary>
            Метод, производящий замену специальных тэгов в отчете
            </summary>
            <param name="reportUnzipPath">Путь до файлов отчета во временной директории</param>
        </member>
        <member name="F:ReportModule.OOEditor.styles">
            <summary>
            Список стилей, которые необходимо применить к каждому последующему элементу
            </summary>
        </member>
        <member name="M:ReportModule.OOEditor.ReportEditing(System.String,System.Collections.ObjectModel.Collection{ReportModule.ReportValue})">
            <summary>
            Метод, производящий замену всех шаблонов отчета на значения переменных отчета
            </summary>
            <param name="reportUnzipPath">Путь до файла отчета</param>
            <param name="values">Список переменных</param>
        </member>
        <member name="M:ReportModule.OOEditor.SpecialTagEditing(System.String)">
            <summary>
            Метод, производящий замену специальных тэгов в отчете
            </summary>
            <param name="reportUnzipPath">Путь до файлов отчета во временной директории</param>
        </member>
        <member name="T:ReportModule.ExcelEditor">
            <summary>
            Редактор отчетов Excel
            </summary>
        </member>
        <member name="F:ReportModule.MSEditor.styles">
            <summary>
            Список стилей, которые необходимо применить к каждому последующему элементу
            </summary>
        </member>
        <member name="M:ReportModule.ExcelEditor.XmlContractorsConvert(System.Collections.ObjectModel.Collection{ReportModule.ReportValue})">
            <summary>
            Метод конвертации xml-замыкателя
            </summary>
            <param name="values">Список переменных, в которых надо найти унифицированные замыкатели и заменить на зависимые от типа отчета</param>
            <returns>Возвращает список переменных отчета с зависимыми от типа отчета xml-замыкателями</returns>
        </member>
        <member name="M:ReportModule.ExcelEditor.ReportEditing(System.String,System.Collections.ObjectModel.Collection{ReportModule.ReportValue})">
            <summary>
            Метод, производящий замену всех шаблонов отчета на значения переменных отчета
            </summary>
            <param name="reportUnzipPath">Путь до файла отчета</param>
            <param name="values">Список переменных</param>
        </member>
        <member name="M:ReportModule.ExcelEditor.WriteString(ReportModule.StringReportValue,System.Xml.Linq.XDocument)">
            <summary>
            Метод, заменяющий строковый шаблон отчета
            </summary>
            <param name="reportValue">Строковая переменная отчета</param>
            <param name="document">Отчет</param>
        </member>
        <member name="M:ReportModule.ExcelEditor.WriteTable(ReportModule.TableReportValue,System.Collections.Generic.KeyValuePair{System.String,System.Xml.Linq.XDocument})">
            <summary>
            Метод, заменяющий табличный шаблон отчета
            </summary>
            <param name="reportValue">Табличная переменная отчета</param>
            <param name="document">Отчет</param>
        </member>
        <member name="M:ReportModule.ExcelEditor.CreateSheetsByElements(System.String,System.Collections.Generic.List{System.Xml.Linq.XElement},ExtendedTypes.ReportTable)">
            <summary>
            Метод создает листы Excel по шаблонному документу и перечню элементов. Метаданные шаблонного листа удаляются из документа.
            </summary>
            <param name="tempSheetName">Полный путь до файла шаблона</param>
            <param name="elements">Перечень элементов worksheet, на базе которых будут созданы листы</param>
            <param name="table">Таблица с параметрами. Используется для задания имен листов</param>
            <returns>Возвращает коллекцию новых листов (исключая шаблонный)</returns>
        </member>
        <member name="M:ReportModule.ExcelEditor.ss_element(System.String,ReportModule.SharedXLSXStrings)">
            <summary>
            Получить элемент в файле sharedStrings.xml Excel-отчета
            </summary>
            <param name="shared_string">Искомая строка</param>
            <param name="shared_strings_list">Класс-обертка sharedStrings.xml</param>
            <returns>Найденый элемент. Если ничего не найдено - вызывается исключение</returns>
        </member>
        <member name="M:ReportModule.ExcelEditor.ss_index(System.String,ReportModule.SharedXLSXStrings)">
            <summary>
            Получить индекс строки в файле sharedStrings.xml Excel-отчета
            </summary>
            <param name="shared_string">Искомая строка</param>
            <param name="shared_strings_list">Класс-обертка sharedStrings.xml</param>
            <returns>Индекс найденного элемента. Если ничего не найдено - вызывается исключение</returns>
        </member>
        <member name="M:ReportModule.ExcelEditor.ca_increment(System.Int32,System.Int32,System.String)">
            <summary>
            Инкремент адреса ячейки таблицы Excel
            </summary>
            <param name="x_increment">Инкремент по столбцам</param>
            <param name="y_increment">Инкремент по строкам</param>
            <param name="address">Исходный адрес ячейки</param>
            <returns>Полученный адресс ячейки</returns>
        </member>
        <member name="M:ReportModule.ExcelEditor.recalculate_merge_cells(System.Xml.Linq.XDocument,System.String,System.Int32)">
            <summary>
            Пересчитать позиции объединенных ячеек согласно смещениям относительно начальной ячейки
            </summary>
            <param name="sheet">Excel-лист</param>
            <param name="address">Адрес ячейки, относительно которой производится смещение</param>
            <param name="y_increment">Смещение по строкам</param>
        </member>
        <member name="M:ReportModule.ExcelEditor.SpecialTagEditing(System.String)">
            <summary>
            Метод, производящий замену специальных тэгов в отчете
            </summary>
            <param name="reportUnzipPath">Путь до файлов отчета во временной директории</param>
        </member>
        <member name="T:ReportModule.OOStyleSheet">
            <summary>
            Класс управления стилями OpenOffice
            </summary>
        </member>
        <member name="F:ReportModule.OOStyleSheet.XmlnsFO">
            <summary>
            Пространство имен fo
            </summary>
        </member>
        <member name="F:ReportModule.OOStyleSheet.XmlnsStyle">
            <summary>
            Пространство имен style
            </summary>
        </member>
        <member name="F:ReportModule.OOStyleSheet.XmlnsOffice">
            <summary>
            Пространство имен office
            </summary>
        </member>
        <member name="F:ReportModule.OOStyleSheet.XmlnsText">
            <summary>
            Пространство имен text
            </summary>
        </member>
        <member name="M:ReportModule.OOStyleSheet.#ctor(System.Xml.Linq.XDocument)">
            <summary>
            Конструктор класса OOStyleSheet
            </summary>
            <param name="document">Документ OpenOffice, из которого загружаются стили</param>
        </member>
        <member name="M:ReportModule.OOStyleSheet.CopyStyle(System.String,System.String)">
            <summary>
            Метод копирует стиль
            </summary>
            <param name="styleName">Имя стиля, который копируем</param>
            <param name="newStyleFamily">Семейство нового стиля</param>
            <returns>Возвращает имя нового стиля</returns>
        </member>
        <member name="M:ReportModule.OOStyleSheet.CreateStyle(System.String)">
            <summary>
            Метод создает новый стиль
            </summary>
            <param name="newStyleFamily">Семейство нового стиля</param>
            <returns>Возвращает имя нового стиля</returns>
        </member>
        <member name="M:ReportModule.OOStyleSheet.ApplyStyle(System.String,ReportModule.Style)">
            <summary>
            Применить стилевое дополнение к указанному стилю
            </summary>
            <param name="styleName">Имя стиля</param>
            <param name="style">Стилевое дополнение (жирный, курсив, подчеркивание, зачеркивание)</param>
        </member>
        <member name="T:ReportModule.ReportHelper">
            <summary>
            Класс со вспомогательными фунциями
            </summary>
        </member>
        <member name="M:ReportModule.ReportHelper.GetTablePatternRegex(System.Collections.Generic.List{System.String})">
            <summary>
            Получить регулярное выражение по списку параметров, входящих в паттерн таблицы
            </summary>
            <param name="templates">Список параметров, входящих в паттерн таблицы</param>
            <returns>Регулярное выражение</returns>
        </member>
        <member name="M:ReportModule.ReportHelper.GetStyleBySpecTag(ReportModule.SpecTag)">
            <summary>
            Конвертер объектов SpecTag в объекты Style
            </summary>
            <param name="spec_tag"></param>
            <returns></returns>
        </member>
        <member name="M:ReportModule.ReportHelper.FindElementsByTag(System.Xml.Linq.XElement,System.String)">
            <summary>
            Поиск xml-элементов с тэгом xml_tag в элементе xelement с рекурсивным заходом
            </summary>
            <param name="xelement">Корневой элемент</param>
            <param name="xml_tag">XML-тэг искомого элемента</param>
            <returns>Список найденных элементов</returns>
        </member>
        <member name="M:ReportModule.ReportHelper.GetTextNodePatternPartInfo(System.Xml.Linq.XText,System.String,System.Collections.Generic.List{ReportModule.PatternNodeInfoCollection})">
            <summary>
            Метод поиска шаблона в текстовых xml-узлах
            </summary>
            <param name="textNode">Текстовый узел</param>
            <param name="pattern">Шаблон</param>
            <param name="ListPNIC">Коллекция шаблонов в узлах</param>
            <returns>Обновленная коллекция шаблонов в узлах</returns>
        </member>
        <member name="M:ReportModule.ReportHelper.GetNodePatternPartsInfo(System.Xml.Linq.XNode,System.String,System.Collections.Generic.List{ReportModule.PatternNodeInfoCollection})">
            <summary>
            Метод поиска частей шаблона в xml-узлах
            </summary>
            <param name="node">XML-узел, в котором производится поиск</param>
            <param name="pattern">Шаблон поиска</param>
            <param name="ListPNIC">Коллекция шаблонов в узлах</param>
            <returns>Обновленная коллекция шаблонов в узлах</returns>
        </member>
        <member name="M:ReportModule.ReportHelper.MatchesPattern(System.Xml.Linq.XElement,System.String)">
            <summary>
            Метод ищет совпадения шаблона в элементе и возвращает их количество
            </summary>
            <param name="element">Элемент</param>
            <param name="pattern">Шаблон</param>
            <returns>Количество совпадений шаблона в элементе</returns>
        </member>
        <member name="M:ReportModule.ReportHelper.ReplaceNodePatternPart(ReportModule.PatternNodeInfo,System.String)">
            <summary>
            Метод заменяет шаблон переданным значением
            </summary>
            <param name="pnic">Информация о блоке замены</param>
            <param name="value">Значение, на которое производится замена</param>
        </member>
        <member name="M:ReportModule.ReportHelper.RebindNodePatternPartsInfo(System.Xml.Linq.XNode,System.Xml.Linq.XNode,System.Collections.Generic.List{ReportModule.PatternNodeInfoCollection})">
            <summary>
            Метод выполняет перепривязку ноды после замены
            </summary>
            <param name="newNode"></param>
            <param name="oldNode"></param>
            <param name="ppis"></param>
        </member>
        <member name="T:ReportModule.PatternNodeInfoCollection">
            <summary>
            Коллекция классов с информацией о позиции частей паттерна в элементах
            </summary>
        </member>
        <member name="T:ReportModule.PatternNodeInfo">
            <summary>
            Класс с информацией о позиции частей паттерна в элементах
            </summary>
        </member>
        <member name="T:ReportModule.XmlContractor">
            <summary>
            Перечисление XML-замыкателей. Определяет правила формирования таблиц отчетов.
            </summary>
        </member>
        <member name="F:ReportModule.XmlContractor.Table">
            <summary>
            Повторять таблицу
            </summary>
        </member>
        <member name="F:ReportModule.XmlContractor.Row">
            <summary>
            Повторять строку
            </summary>
        </member>
        <member name="F:ReportModule.XmlContractor.Cell">
            <summary>
            Повторять ячейку строки
            </summary>
        </member>
        <member name="F:ReportModule.XmlContractor.Paragraph">
            <summary>
            Повторять абзац
            </summary>
        </member>
        <member name="T:ReportModule.IPlug">
            <summary>
            Доступный из-вне интерфейс плагина
            </summary>
        </member>
        <member name="M:ReportModule.IPlug.ReportSetTemplateFile(System.String)">
            <summary>
            Установить файл шаблона
            </summary>
            <param name="fileName">Полный путь до файла шаблона</param>
        </member>
        <member name="M:ReportModule.IPlug.ReportSetStringValue(System.String,System.String)">
            <summary>
            Установить строковый параметр замены
            </summary>
            <param name="name">Шаблон замены"</param>
            <param name="value">Подставляемое значение</param>
        </member>
        <member name="M:ReportModule.IPlug.ReportSetStringValues(ExtendedTypes.ReportRow)">
            <summary>
            Групповая установка строковых параметров замены
            </summary>
            <param name="values">Список подставляемых значений</param>
        </member>
        <member name="M:ReportModule.IPlug.ReportSetTableValue(ExtendedTypes.ReportTable,ReportModule.XmlContractor)">
            <summary>
            Установить списочный (табличный) параметр замены
            </summary>
            <param name="table">Список параметров</param>
            <param name="xmlContractor">XML-замыкатель. Поддерживаемые замыкатели по умолчанию table, row, cell, p</param>
        </member>
        <member name="M:ReportModule.IPlug.ReportGenerate(System.String@)">
            <summary>
            Функция генерации отчета
            </summary>
            <param name="fileName">Путь до выходного файла отчета</param>
        </member>
        <member name="T:ReportModule.ReportPlug">
            <summary>
            Класс, реализующий интерфейс плагина, в каждой сборке может быть только один такой класс
            </summary>
        </member>
        <member name="F:ReportModule.ReportPlug.template_file">
            <summary>
            Файл шаблона отчета
            </summary>
        </member>
        <member name="F:ReportModule.ReportPlug.temporary_path">
            <summary>
            Путь до временной директории пользователя
            </summary>
        </member>
        <member name="F:ReportModule.ReportPlug.Values">
            <summary>
            Список переменных для подстановки
            </summary>
        </member>
        <member name="M:ReportModule.ReportPlug.#ctor">
            <summary>
            В конструкторе происходит проверка существования директории report_module во временной папке.
            При необходимости директория создается. Плагин контролирует очистку директории от старых файлов.
            </summary>
        </member>
        <member name="M:ReportModule.ReportPlug.ReportSetTemplateFile(System.String)">
            <summary>
            Установить файл шаблона
            </summary>
            <param name="fileName">Полный путь до файла шаблона</param>
        </member>
        <member name="M:ReportModule.ReportPlug.ReportSetStringValue(System.String,System.String)">
            <summary>
            Установить строковый параметр замены
            </summary>
            <param name="name">Шаблон замены"</param>
            <param name="value">Подставляемое значение</param>
        </member>
        <member name="M:ReportModule.ReportPlug.ReportSetStringValues(ExtendedTypes.ReportRow)">
            <summary>
            Групповая установка строковых параметров замены
            </summary>
            <param name="values">Список подставляемых значений</param>
        </member>
        <member name="M:ReportModule.ReportPlug.ReportSetTableValue(ExtendedTypes.ReportTable,ReportModule.XmlContractor)">
            <summary>
            Установить списочный (табличный) параметр замены
            </summary>
            <param name="table">Список параметров</param>
            <param name="xmlContractor">XML-замыкатель. Поддерживаемые замыкатели по умолчанию table, row, cell, p</param>
        </member>
        <member name="M:ReportModule.ReportPlug.ReportGenerate(System.String@)">
            <summary>
            Функция генерации отчета
            </summary>
            <param name="fileName">Путь до выходного файла отчета</param>
        </member>
        <member name="M:ReportModule.ReportPlug.ReportEditing(System.String,System.String)">
            <summary>
            Функция определения типа документа и вызова соответсвующего редактора отчета
            </summary>
            <param name="report_unzip_path">Путь до распакованного документа</param>
            <param name="extension">Расширение файла</param>
        </member>
        <member name="T:ReportModule.ReportException">
            <summary>
            Класс исключения модуля ReportPlug
            </summary>
        </member>
        <member name="M:ReportModule.ReportException.#ctor">
            <summary>
            Конструктор класса исключения ReportException
            </summary>
        </member>
        <member name="M:ReportModule.ReportException.#ctor(System.String)">
            <summary>
            Конструктор класса исключения ReportException
            </summary>
            <param name="message">Сообщение об ошибке</param>
        </member>
        <member name="M:ReportModule.ReportException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор класса исключения ReportException
            </summary>
            <param name="message">Сообщение об ошибке</param>
            <param name="innerException">Вложенное исключение</param>
        </member>
        <member name="M:ReportModule.ReportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор класса исключения ReportException
            </summary>
            <param name="info">Информация сериализации</param>
            <param name="context">Контекст потока</param>
        </member>
        <member name="T:ReportModule.ReportValue">
            <summary>
            Абстрактный класс значения переменной отчета
            </summary>
        </member>
        <member name="T:ReportModule.SharedXLSXStrings">
            <summary>
            Класс работы с shared-строками отчета Excel
            </summary>
        </member>
        <member name="M:ReportModule.SharedXLSXStrings.#ctor(System.String)">
            <summary>
            Конструктор класса SharedXLSXStrings
            </summary>
            <param name="fileName">Путь до файла с shared-строками</param>
        </member>
        <member name="M:ReportModule.SharedXLSXStrings.Add(System.String)">
            <summary>
            Добавить shared-строку
            </summary>
            <param name="value">Shared-строка</param>
            <returns>возвращает индекс добавленной строки</returns>
        </member>
        <member name="M:ReportModule.SharedXLSXStrings.Save(System.String)">
            <summary>
            Сохранить список shared-строк в файл
            </summary>
            <param name="fileName">Имя файла</param>
        </member>
        <member name="P:ReportModule.SharedXLSXStrings.Count">
            <summary>
            Число shared-строк
            </summary>
        </member>
        <member name="P:ReportModule.SharedXLSXStrings.UniqueCount">
            <summary>
            Число уникальных shared-строк
            </summary>
        </member>
        <member name="P:ReportModule.SharedXLSXStrings.SharedStrings">
            <summary>
            Список shared-строк
            </summary>
        </member>
        <member name="T:ReportModule.StringReportValue">
            <summary>
            Строковая переменная отчета
            </summary>
        </member>
        <member name="M:ReportModule.StringReportValue.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса StringReportValue
            </summary>
            <param name="pattern">Шаблон замены. Автоматически обрамляется знаками "$"</param>
            <param name="value">Значение переменной</param>
        </member>
        <member name="P:ReportModule.StringReportValue.Pattern">
            <summary>
            Шаблон в отчете, который будет заменяться на значение переменной
            </summary>
        </member>
        <member name="P:ReportModule.StringReportValue.Value">
            <summary>
            Значение переменной
            </summary>
        </member>
        <member name="T:ReportModule.TableReportValue">
            <summary>
            Табличная переменная отчета
            </summary>
        </member>
        <member name="M:ReportModule.TableReportValue.#ctor(ExtendedTypes.ReportTable,System.String)">
            <summary>
            Конструктор класса TableReportValue
            </summary>
            <param name="table">Таблица, которая будет вставлена в отчет</param>
            <param name="xmlContractor">XML-замыкатель</param>
        </member>
        <member name="P:ReportModule.TableReportValue.Table">
            <summary>
            Таблица отчета
            </summary>
        </member>
        <member name="P:ReportModule.TableReportValue.XmlContractor">
            <summary>
            XML-замыкатель
            </summary>
        </member>
        <member name="T:ReportModule.Style">
            <summary>
            Перечисление стилей оформления
            </summary>
        </member>
        <member name="F:ReportModule.Style.Bold">
            <summary>
            Жирный
            </summary>
        </member>
        <member name="F:ReportModule.Style.Italic">
            <summary>
            Курсив
            </summary>
        </member>
        <member name="F:ReportModule.Style.Underline">
            <summary>
            Подчеркивание
            </summary>
        </member>
        <member name="F:ReportModule.Style.Strike">
            <summary>
            Зачеркнутый текст
            </summary>
        </member>
        <member name="F:ReportModule.Style.None">
            <summary>
            Отсутствует
            </summary>
        </member>
        <member name="T:ReportModule.WordEditor">
            <summary>
            Редактор отчетов Word
            </summary>
        </member>
        <member name="M:ReportModule.WordEditor.XmlContractorsConvert(System.Collections.ObjectModel.Collection{ReportModule.ReportValue})">
            <summary>
            Класс конвертации xml-замыкателя
            </summary>
            <param name="values">Список переменных, в которых надо найти унифицированные замыкатели и заменить на зависимые от типа отчета</param>
            <returns>Возвращает список переменных отчета с зависимыми от типа отчета xml-замыкателями</returns>
        </member>
        <member name="M:ReportModule.WordEditor.ReportEditing(System.String,System.Collections.ObjectModel.Collection{ReportModule.ReportValue})">
            <summary>
            Метод, производящий замену всех шаблонов отчета на значения переменных отчета
            </summary>
            <param name="reportUnzipPath">Путь до файла отчета</param>
            <param name="values">Список переменных</param>
        </member>
        <member name="M:ReportModule.WordEditor.SpecialTagEditing(System.String)">
            <summary>
            Метод, производящий замену специальных тэгов в отчете
            </summary>
            <param name="reportUnzipPath">Путь до файлов отчета во временной директории</param>
        </member>
    </members>
</doc>
